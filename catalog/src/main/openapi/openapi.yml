openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8084
    description: Generated server url
paths:
  /api/modifyProduct/{id}:
    put:
      tags:
        - catalog-controller
      operationId: modifyProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
  /api/createProduct:
    post:
      tags:
        - catalog-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
  /api/createCategory:
    post:
      tags:
        - catalog-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
  /api/product/search:
    get:
      tags:
        - catalog-controller
      operationId: search
      parameters:
        - name: minPrice
          in: query
          required: false
          schema:
            type: integer
        - name: maxPrice
          in: query
          required: false
          schema:
            type: integer
        - name: productName
          in: query
          required: false
          schema:
            type: string
        - name: categoryName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: size
          required: false
          in: query
          schema:
            type: integer
        - name: sort
          required: false
          in: query
          schema:
            type: array
            items:
                type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
  /api/product/history/{id}:
    get:
      tags:
        - catalog-controller
      operationId: getHistory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryDataProductDto'
  /api/product/{id}:
    delete:
      tags:
        - catalog-controller
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    CategoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProductDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/CategoryDto'
    HistoryDataProductDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProductDto'
        revType:
          type: string
          enum:
            - ADD
            - MOD
            - DEL
        revision:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
    Predicate:
      type: object
    Pageable:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
        offset:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean